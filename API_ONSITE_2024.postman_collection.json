{
	"info": {
		"_postman_id": "3aab84c1-4364-49f4-8952-65d3a9e20157",
		"name": "API_ONSITE_2024",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14309444"
	},
	"item": [
		{
			"name": "E2E",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"// store data from response body",
									"pm.environment.set(\"studentId\", jsonData.data.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify success message\", function () {",
									"    pm.expect(jsonData.message).to.be.eql(\"User created successfully\");",
									"});",
									"",
									"pm.test(\"Verify agree value should be true\", function () {",
									"    pm.expect(jsonData.data.agree).to.be.eql(true);",
									"});",
									"",
									"// Write test to verify names ",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// names",
									"var firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"pm.environment.set(\"studentFirstName\", firstName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"var lastName = pm.variables.replaceIn('{{$randomLastName}}')",
									"pm.environment.set(\"studentLastName\", lastName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"// email",
									"var emailDomain = \"@taltektc.com\"",
									"var randomNumber = Math.floor(Math.random() * 90000) + 10000;",
									"var randomEmail = firstName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+\".\"+lastName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+randomNumber+emailDomain;",
									"pm.environment.set(\"studentEmail\", randomEmail);",
									"",
									"// DOB (MM/DD/YYYY)",
									"pm.environment.set('dobYear', _.random(1980, 2000));",
									"pm.environment.set('dobMonth', _.random(1, 12));",
									"pm.environment.set('dobDay', _.random(1, 28));",
									"",
									"// Gender",
									"const genderList = ['male', 'female', 'MALE', 'FEMALE'];",
									"const gender = Math.floor(Math.random()*genderList.length);",
									"pm.environment.set('studentGender', genderList[gender]);",
									"console.log(genderList[gender]);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{studentFirstName}}\",\n  \"lastName\": \"{{studentLastName}}\",\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"123456$\",\n  \"confirmPassword\": \"123456$\",\n  \"dob\": {\n    \"year\": {{dobYear}},\n    \"month\": {{dobMonth}},\n    \"day\": {{dobDay}}\n  },\n  \"gender\": \"{{studentGender}}\",\n  \"agree\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/signup",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"TTC0524\",\n  \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/student/{{studentId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of the Students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Student data should not be empty\", function () {",
									"     pm.expect(jsonData.data).to.be.an('array').that.is.not.empty",
									"});",
									"",
									"pm.test(\"Homework: Verify student information\", function () {",
									"     // Find the expected student id from the data array",
									"     // Once studentId is found, verify first, last name, email, gender and agree should be always 1",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"TTC0524\",\n  \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/students",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with email",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"123456$\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"// store data from response body",
									"pm.environment.set(\"studentToken\", jsonData.access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{studentId}}\",\n  \"password\": \"123456$\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// names",
									"var firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"pm.environment.set(\"studentFirstNameUpdate\", firstName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"var lastName = pm.variables.replaceIn('{{$randomLastName}}')",
									"pm.environment.set(\"studentLastNameUpdate\", lastName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('verify email stays as before', function () {",
									"    pm.expect(jsonData.data.email).to.be.eq(environment.studentEmail);",
									"});",
									"",
									"pm.test('verify firstname got updated', function () {",
									"    pm.expect(jsonData.data.first_name).to.be.eq(environment.studentFirstNameUpdate);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{studentToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{studentFirstNameUpdate}}\",\n  \"lastName\": \"{{studentLastNameUpdate}}\",\n  \"email\": \"{{studentEmail}}\",\n  \"dob\": {\n    \"year\": 1988,\n    \"month\": 1,\n    \"day\": 10\n  },\n  \"gender\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/student/update/{{studentId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"student",
								"update",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('verify password has been updated', function () {",
									"    pm.expect(jsonData.message).to.be.eq(\"Password updated successfully for student ID: \" + environment.studentId);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{studentToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "eyJ0eXiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJsb2NhbGhvc3QiLCJhdWQiOiJsb2NhbGhvc3QiLCJ1c2VyX3R5cGUiOiJyZWd1bGFyIiwidGltZXN0YW1wIjoxNzEwNzAxODQ2fQ.KFghjmGvFxcspkCNpuyjiUYsaLA-xul74wBb_ftd3OE",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"updatedPass1\",\n  \"confirmPassword\": \"updatedPass1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/updatePassword/{{studentId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"updatePassword",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login after password change",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"// store data from response body",
									"pm.environment.set(\"studentToken\", jsonData.access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{studentId}}\",\n  \"password\": \"updatedPass1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status delete should return 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{studentToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/student/{{studentId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm delete 404 RC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"TTC0524\",\n  \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/student/{{studentId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1. Signup",
			"item": [
				{
					"name": "Signup with firstname less than 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Ensure firstname cannot be less than 3 char\", function () {",
									"    pm.expect(jsonData.message).to.be.eql(\"First name should be at least 3 characters.\");",
									"});",
									"",
									"",
									"",
									"// Write test to verify names ",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// names",
									"var firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"pm.environment.set(\"studentFirstName\", firstName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"var lastName = pm.variables.replaceIn('{{$randomLastName}}')",
									"pm.environment.set(\"studentLastName\", lastName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"// email",
									"var emailDomain = \"@taltektc.com\"",
									"var randomNumber = Math.floor(Math.random() * 90000) + 10000;",
									"var randomEmail = firstName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+\".\"+lastName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+randomNumber+emailDomain;",
									"pm.environment.set(\"studentEmail\", randomEmail);",
									"",
									"// DOB (MM/DD/YYYY)",
									"pm.environment.set('dobYear', _.random(1980, 2000));",
									"pm.environment.set('dobMonth', _.random(1, 12));",
									"pm.environment.set('dobDay', _.random(1, 28));",
									"",
									"// Gender",
									"const genderList = ['male', 'female', 'MALE', 'FEMALE'];",
									"const gender = Math.floor(Math.random()*genderList.length);",
									"pm.environment.set('studentGender', genderList[gender]);",
									"console.log(genderList[gender]);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"aa\",\n  \"lastName\": \"{{studentLastName}}\",\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"123456$\",\n  \"confirmPassword\": \"123456$\",\n  \"dob\": {\n    \"year\": {{dobYear}},\n    \"month\": {{dobMonth}},\n    \"day\": {{dobDay}}\n  },\n  \"gender\": \"{{studentGender}}\",\n  \"agree\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/signup",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup with firstname  as empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Ensure firstname can not be empty\", function () {",
									"    pm.expect(jsonData.message).to.be.eql(\"Please provide all required fields\");",
									"});",
									"",
									"",
									"",
									"// Write test to verify names ",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// names",
									"var firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"pm.environment.set(\"studentFirstName\", firstName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"var lastName = pm.variables.replaceIn('{{$randomLastName}}')",
									"pm.environment.set(\"studentLastName\", lastName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"// email",
									"var emailDomain = \"@taltektc.com\"",
									"var randomNumber = Math.floor(Math.random() * 90000) + 10000;",
									"var randomEmail = firstName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+\".\"+lastName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+randomNumber+emailDomain;",
									"pm.environment.set(\"studentEmail\", randomEmail);",
									"",
									"// DOB (MM/DD/YYYY)",
									"pm.environment.set('dobYear', _.random(1980, 2000));",
									"pm.environment.set('dobMonth', _.random(1, 12));",
									"pm.environment.set('dobDay', _.random(1, 28));",
									"",
									"// Gender",
									"const genderList = ['male', 'female', 'MALE', 'FEMALE'];",
									"const gender = Math.floor(Math.random()*genderList.length);",
									"pm.environment.set('studentGender', genderList[gender]);",
									"console.log(genderList[gender]);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"{{studentLastName}}\",\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"123456$\",\n  \"confirmPassword\": \"123456$\",\n  \"dob\": {\n    \"year\": {{dobYear}},\n    \"month\": {{dobMonth}},\n    \"day\": {{dobDay}}\n  },\n  \"gender\": \"{{studentGender}}\",\n  \"agree\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/signup",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup with firstname  as more than 13 char",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Ensure firstname can not be empty\", function () {",
									"    pm.expect(jsonData.message).to.be.eql(\"First name can contains maximum 13 characters.\");",
									"});",
									"",
									"",
									"",
									"// Write test to verify names ",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// names",
									"var firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"pm.environment.set(\"studentFirstName\", firstName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"var lastName = pm.variables.replaceIn('{{$randomLastName}}')",
									"pm.environment.set(\"studentLastName\", lastName.replace(/[^a-zA-Z0-9 ]/g, ''));",
									"",
									"// email",
									"var emailDomain = \"@taltektc.com\"",
									"var randomNumber = Math.floor(Math.random() * 90000) + 10000;",
									"var randomEmail = firstName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+\".\"+lastName.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '')+randomNumber+emailDomain;",
									"pm.environment.set(\"studentEmail\", randomEmail);",
									"",
									"// DOB (MM/DD/YYYY)",
									"pm.environment.set('dobYear', _.random(1980, 2000));",
									"pm.environment.set('dobMonth', _.random(1, 12));",
									"pm.environment.set('dobDay', _.random(1, 28));",
									"",
									"// Gender",
									"const genderList = ['male', 'female', 'MALE', 'FEMALE'];",
									"const gender = Math.floor(Math.random()*genderList.length);",
									"pm.environment.set('studentGender', genderList[gender]);",
									"console.log(genderList[gender]);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "api_token",
								"value": "DevGF4sg665s4ggFddfdgdgFFrs54D87sr54afggsTTC",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"asdfdasfasdfsadfadsfasdfadsfadsfsad\",\n  \"lastName\": \"{{studentLastName}}\",\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"123456$\",\n  \"confirmPassword\": \"123456$\",\n  \"dob\": {\n    \"year\": {{dobYear}},\n    \"month\": {{dobMonth}},\n    \"day\": {{dobDay}}\n  },\n  \"gender\": \"{{studentGender}}\",\n  \"agree\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/signup",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Get Student Info",
			"item": []
		}
	],
	"variable": [
		{
			"key": "randomNum",
			"value": ""
		}
	]
}